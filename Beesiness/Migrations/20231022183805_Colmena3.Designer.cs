// <auto-generated />
using System;
using Beesiness.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Beesiness.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231022183805_Colmena3")]
    partial class Colmena3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Beesiness.Models.Colmena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoColmena")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblColmenas");
                });

            modelBuilder.Entity("Beesiness.Models.Enfermedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblEnfermedades");
                });

            modelBuilder.Entity("Beesiness.Models.EnfermedadColmena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaDeteccion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRecuperacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdColmena")
                        .HasColumnType("int");

                    b.Property<int>("IdEnfermedad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdColmena");

                    b.HasIndex("IdEnfermedad");

                    b.ToTable("tblEnfermedadColmena");
                });

            modelBuilder.Entity("Beesiness.Models.EnfermedadColmena", b =>
                {
                    b.HasOne("Beesiness.Models.Colmena", "Colmena")
                        .WithMany()
                        .HasForeignKey("IdColmena")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beesiness.Models.Enfermedad", "Enfermedad")
                        .WithMany()
                        .HasForeignKey("IdEnfermedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colmena");

                    b.Navigation("Enfermedad");
                });
#pragma warning restore 612, 618
        }
    }
}
